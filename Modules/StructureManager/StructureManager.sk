#===================================================================================================================================#
#  ____    _                           _                           __  __                                               
# / ___|  | |_   _ __   _   _    ___  | |_   _   _   _ __    ___  |  \/  |   __ _   _ __     __ _    __ _    ___   _ __ 
# \___ \  | __| | '__| | | | |  / __| | __| | | | | | '__|  / _ \ | |\/| |  / _` | | '_ \   / _` |  / _` |  / _ \ | '__|
#  ___) | | |_  | |    | |_| | | (__  | |_  | |_| | | |    |  __/ | |  | | | (_| | | | | | | (_| | | (_| | |  __/ | |   
# |____/   \__| |_|     \__,_|  \___|  \__|  \__,_| |_|     \___| |_|  |_|  \__,_| |_| |_|  \__,_|  \__, |  \___| |_|   
#                                                                                                   |___/               
#									By Vengelis_
#===================================================================================================================================# 

#===================================================================================================================================# 
#
#	Contributeurs:
#		- Blackmine57
#		- Vengelis
#
#===================================================================================================================================# 

#===================================================================================================================================#
#   Options
#===================================================================================================================================#

options:
	
	version: 1.0.0

#===================================================================================================================================#
#   Necessite AtomicFoundation pour le chargement des configurations !
#===================================================================================================================================#

#===================================================================================================================================#
#   Code
#===================================================================================================================================#

on load:
	load yaml "plugins/AtomicFoundation/StructureManager.yml"

on load:
	set {_SM::debugMode} to (yaml value "Debugger.debugMode" of "StructureManager")
	set {_SM::debugPoseBlock} to (yaml value "Debugger.debugPoseBlock" of "StructureManager")
	if {_SM::debugMode} is true:
		set {SM::debugMode} to true
	else:
		delete {SM::debugMode}
	if {_SM::debugPoseBlock} is true:
		set {SM::debugPoseBlock} to true
	else:
		delete {SM::debugPoseBlock}

function verifStructure(block: block, blockInterectLocation: location, p: player, nameStructure: text) :: boolean:
	set {_direction} to (yaml value "%{_nameStructure}%.Direction" of "StructureManager")
	set {_structureParts} to (yaml value "%{_nameStructure}%.nbBlock" of "StructureManager")
	set {_ID} to 0
	set {_trigger} to 0
	set {_partOfStructure} to 0
	while {_trigger} < 5:
		if {_direction} is "Nord":
			add 1 to {_trigger}
			loop yaml node list "%{_nameStructure}%.datas" of "StructureManager":
				add 1 to {_ID}
				set {_place::%{_ID}%::1} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.X" of "StructureManager")
				set {_place::%{_ID}%::2} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Y" of "StructureManager")
				set {_place::%{_ID}%::3} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Z" of "StructureManager")
				set {_blockPlace} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Block" of "StructureManager")
				set {_locationBlock} to block at location {_blockInterectLocation}'s x-coordinate-{_place::%{_ID}%::1}, {_blockInterectLocation}'s y-coordinate+{_place::%{_ID}%::2}, {_blockInterectLocation}'s z-coordinate-{_place::%{_ID}%::3} in world of {_p}
				set {_blockPlace} to "%{_blockPlace}%"
				set {_locBlock} to {_locationBlock}'s location
				set {_locationBlock} to "%{_locationBlock}%"
				replace all " item" with "" in {_locationBlock}
				if {SM::debugMode} is true:
					broadcast "%{_ID}% &9%{_locationBlock}% &2%{_blockPlace}% &cnord"
				if {_blockPlace} is "%{_locationBlock}%":
					add 1 to {_partOfStructure}
				else:
					if {SM::debugMode} is false:
						set {_direction} to "Sud"
						set {_nopMessage} to true
					if {SM::debugPoseBlock} is true:
						set block at {_locBlock} to gold block
					if {SM::debugMode} is true:
						broadcast "%{_ID}% %{_locationBlock}% %{_blockPlace}% %{_locBlock}% &cnord"
					exit loop
			if {_nopMessage} is not set:
				if {_structureParts} = {_partOfStructure}:
					set {_trigger} to 10
					message "&7Structure basée sur: &aNord" to {_p}
					return true
				else:
					return false
		delete {_nopMessage}
		set {_partOfStructure} to 0
		set {_ID} to 0
		if {_direction} is "Sud":
			add 1 to {_trigger}
			loop yaml node list "%{_nameStructure}%.datas" of "StructureManager":
				add 1 to {_ID}
				set {_blockPlace} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Block" of "StructureManager")
				set {_place::%{_ID}%::1} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.X" of "StructureManager")
				set {_place::%{_ID}%::2} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Y" of "StructureManager")
				set {_place::%{_ID}%::3} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Z" of "StructureManager")
				set {_locationBlock} to block at location {_blockInterectLocation}'s x-coordinate+{_place::%{_ID}%::1}, {_blockInterectLocation}'s y-coordinate+{_place::%{_ID}%::2}, {_blockInterectLocation}'s z-coordinate+{_place::%{_ID}%::3} in world of {_p}
				set {_blockPlace} to "%{_blockPlace}%"
				set {_locBlock} to {_locationBlock}'s location
				set {_locationBlock} to "%{_locationBlock}%"
				replace all " item" with "" in {_locationBlock}
				if {SM::debugMode} is true:
					broadcast "%{_ID}% &9%{_locationBlock}% &2%{_blockPlace}% &csud"
				if {_blockPlace} is "%{_locationBlock}%":
					add 1 to {_partOfStructure}
					#broadcast "ok"
				else:
					if {SM::debugMode} is false:
						set {_direction} to "Est"
						set {_nopMessage} to true
					if {SM::debugPoseBlock} is true:
						set block at {_locBlock} to gold block
					if {SM::debugMode} is true:
						broadcast "%{_ID}% %{_locationBlock}% %{_blockPlace}% %{_locBlock}% &csud"
					exit loop
			if {_nopMessage} is not set:
				if {_structureParts} = {_partOfStructure}:
					set {_trigger} to 10
					message "&7Structure basée sur: &aSud" to {_p}
					return true
				else:
					return false
		delete {_nopMessage}
		set {_partOfStructure} to 0
		set {_ID} to 0
		if {_direction} is "Est":
			add 1 to {_trigger}
			loop yaml node list "%{_nameStructure}%.datas" of "StructureManager":
				add 1 to {_ID}
				set {_blockPlace} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Block" of "StructureManager")
				set {_place::%{_ID}%::1} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.X" of "StructureManager")
				set {_place::%{_ID}%::2} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Y" of "StructureManager")
				set {_place::%{_ID}%::3} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Z" of "StructureManager")
				set {_locationBlock} to block at location {_blockInterectLocation}'s x-coordinate+{_place::%{_ID}%::3}, {_blockInterectLocation}'s y-coordinate+{_place::%{_ID}%::2}, {_blockInterectLocation}'s z-coordinate+{_place::%{_ID}%::1} in world of {_p}
				set {_blockPlace} to "%{_blockPlace}%"
				set {_locBlock} to {_locationBlock}'s location
				set {_locationBlock} to "%{_locationBlock}%"
				replace all " item" with "" in {_locationBlock}
				if {SM::debugMode} is true:
					broadcast "%{_ID}% &9%{_locationBlock}% &2%{_blockPlace}% &cest"
				if {_blockPlace} is "%{_locationBlock}%":
					add 1 to {_partOfStructure}
					#set {_debug} to location {_blockInterectLocation}'s x-coordinate+{_place::%{_ID}%::3}, {_blockInterectLocation}'s y-coordinate+{_place::%{_ID}%::2}, {_blockInterectLocation}'s z-coordinate+{_place::%{_ID}%::1} in world of {_p}
					#set block at {_debug} to iron block
				else:
					if {SM::debugMode} is false:
						set {_direction} to "Ouest"
						set {_nopMessage} to true
					if {SM::debugPoseBlock} is true:
						set block at {_locBlock} to gold block
					if {SM::debugMode} is true:
						broadcast "%{_ID}% %{_locationBlock}% %{_blockPlace}% %{_locBlock}% &cest"
					exit loop
			if {_nopMessage} is not set:
				if {_structureParts} = {_partOfStructure}:
					set {_trigger} to 10
					message "&7Structure basée sur: &aEst" to {_p}
					return true
				else:
					return false
		delete {_nopMessage}
		set {_partOfStructure} to 0
		set {_ID} to 0
		if {_direction} is "Ouest":
			add 1 to {_trigger}
			loop yaml node list "%{_nameStructure}%.datas" of "StructureManager":
				add 1 to {_ID}
				set {_blockPlace} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Block" of "StructureManager")
				set {_place::%{_ID}%::1} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.X" of "StructureManager")
				set {_place::%{_ID}%::2} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Y" of "StructureManager")
				set {_place::%{_ID}%::3} to (yaml value "%{_nameStructure}%.datas.%{_ID}%.Z" of "StructureManager")
				set {_locationBlock} to block at location {_blockInterectLocation}'s x-coordinate-{_place::%{_ID}%::3}, {_blockInterectLocation}'s y-coordinate+{_place::%{_ID}%::2}, {_blockInterectLocation}'s z-coordinate-{_place::%{_ID}%::1} in world of {_p}
				set {_blockPlace} to "%{_blockPlace}%"
				set {_locBlock} to {_locationBlock}'s location
				set {_locationBlock} to "%{_locationBlock}%"
				replace all " item" with "" in {_locationBlock}
				if {SM::debugMode} is true:
					broadcast "%{_ID}% &9%{_locationBlock}% &2%{_blockPlace}% &couest"
				if {_blockPlace} is "%{_locationBlock}%":
					add 1 to {_partOfStructure}
				else:
					if {SM::debugMode} is false:
						set {_direction} to "Nord"
						set {_nopMessage} to true
					if {SM::debugPoseBlock} is true:
						set block at {_locBlock} to gold block
					if {SM::debugMode} is true:
						broadcast "%{_ID}% %{_locationBlock}% %{_blockPlace}% %{_locBlock}% &cest"
					exit loop
			if {_nopMessage} is not set:
				if {_structureParts} = {_partOfStructure}:
					set {_trigger} to 10 
					message "&7Structure basée sur: &aOuest" to {_p}
					return true
				else:
					return false
		delete {_nopMessage}
		set {_partOfStructure} to 0
		set {_ID} to 0
		if {_direction} is not "Ouest" or "Est" or "Nord" or "Sud":
			add 10 to {_trigger}
			message "&4Erreur de configuration !" to {_p}
			
			
on click on iron block:
	set {_block} to clicked block
	set {_blockInterectLocation} to location of clicked block
	if verifStructure(clicked block, location of clicked block, player, "siloMissile") is true:
		broadcast "ok !"
			
			
command /cc:
	trigger:
		loop 200 times:
			broadcast ""
